{"ast":null,"code":"var _jsxFileName = \"/Users/annikasingh/Desktop/hi/sudoku/src/components/TestCode.tsx\";\nimport \"../styles/board.css\";\nimport { Sudoku } from \"./Sudoku\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TestBoard() {\n  const colors = [\"#DAB49D\", \"#F29559\", \"#F2D492\", \"#A9C5A0\", \"#9DCBBA\", \"#779FA1\", \"#92817A\", \"#979B8D\", \"#F1DABF\" //#DAB49D pink\n  ];\n  let N = 9;\n  let K = 40;\n  let sudoku = new Sudoku(N, K);\n  sudoku.fillValues();\n  console.log(sudoku.mat);\n  sudoku.mat.map((item, index) => console.log(item));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_c = TestBoard;\nvar _c;\n$RefreshReg$(_c, \"TestBoard\");","map":{"version":3,"names":["Sudoku","jsxDEV","_jsxDEV","TestBoard","colors","N","K","sudoku","fillValues","console","log","mat","map","item","index","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/annikasingh/Desktop/hi/sudoku/src/components/TestCode.tsx"],"sourcesContent":["import \"../styles/board.css\";\nimport { CreateBoard } from \"./CreateBoard\";\nimport { Sudoku } from \"./Sudoku\";\n\nexport type Board = {\n  num: number;\n  box: number;\n  row: number;\n  col: number;\n};\n\nexport default function TestBoard() {\n  const colors = [\n    \"#DAB49D\",\n    \"#F29559\",\n    \"#F2D492\",\n    \"#A9C5A0\",\n    \"#9DCBBA\",\n    \"#779FA1\",\n    \"#92817A\",\n    \"#979B8D\",\n    \"#F1DABF\", //#DAB49D pink\n  ];\n\n  let N = 9;\n  let K = 40;\n  let sudoku = new Sudoku(N, K);\n  sudoku.fillValues();\n  console.log(sudoku.mat);\n  sudoku.mat.map((item, index) => console.log(item));\n\n  return (\n    <div className=\"board\">\n      {/*sudoku.mat.map((row: number[], index: number) => (\n        <div className=\"grid-box\" id={index.toString()}>\n          {row.map((cell: number, cellIndex: number) => (\n            <div\n              className=\"cell-item\"\n              id={cellIndex.toString()}\n              style={{ backgroundColor: colors[index] }}\n            >\n              <input\n                defaultValue={cell}\n                onChange={(e) => {\n                  let numberValue = Number.parseInt(e.target.value);\n                  if (numberValue && numberValue <= 9 && numberValue >= 1) {\n                    sudoku.mat[index][cellIndex] = Number.parseInt(\n                      e.target.value\n                    );\n                  } else {\n                    e.target.value = \"\";\n                  }\n                }}\n                className=\"input-cell\"\n              />\n            </div>\n          ))}\n        </div>\n      ))*/}\n    </div>\n  );\n}\n"],"mappings":";AAAA,OAAO,qBAAqB;AAE5B,SAASA,MAAM,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AASlC,eAAe,SAASC,SAASA,CAAA,EAAG;EAClC,MAAMC,MAAM,GAAG,CACb,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,CAAE;EAAA,CACZ;EAED,IAAIC,CAAC,GAAG,CAAC;EACT,IAAIC,CAAC,GAAG,EAAE;EACV,IAAIC,MAAM,GAAG,IAAIP,MAAM,CAACK,CAAC,EAAEC,CAAC,CAAC;EAC7BC,MAAM,CAACC,UAAU,CAAC,CAAC;EACnBC,OAAO,CAACC,GAAG,CAACH,MAAM,CAACI,GAAG,CAAC;EACvBJ,MAAM,CAACI,GAAG,CAACC,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAKL,OAAO,CAACC,GAAG,CAACG,IAAI,CAAC,CAAC;EAElD,oBACEX,OAAA;IAAKa,SAAS,EAAC;EAAO;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OA2BjB,CAAC;AAEV;AAACC,EAAA,GAlDuBjB,SAAS;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}