{"ast":null,"code":"var _jsxFileName = \"/Users/annikasingh/Desktop/hi/sudoku-git/sudoku/src/components/display/BoardDisplay.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { colors } from \"./SudokuBoard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function BoardDisplay({\n  initial\n}) {\n  _s();\n  const [editing, setEditing] = useState(0);\n  useEffect(() => {\n    let completedBoard = initial.filter(box => box.filter(item => item.num == 0).length > 0).length == 0;\n    let flattenBoard = [];\n    initial.map(box => box.map(item => flattenBoard.push(item)));\n    if (completedBoard) {\n      let rowConflict = flattenBoard.filter(item => item.row);\n      let allNumbers = Array.from(Array(9).keys()).sort();\n      Array.from(Array(9).keys()).map(val => {\n        let noRowConflict = flattenBoard.filter(item => item.row == val).map(item => item.num).sort() == allNumbers;\n        let noColConflict = flattenBoard.filter(item => item.col == val).map(item => item.num).sort() == allNumbers;\n      });\n    }\n    console.log(completedBoard);\n    console.log(initial);\n  }, [editing]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board\",\n    children: initial.map((box, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid-box\",\n      id: index.toString(),\n      children: box.map((cell, cellIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cell-item\",\n        id: cellIndex.toString(),\n        style: {\n          backgroundColor: colors[index]\n        },\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          defaultValue: cell.num != 0 ? cell.num : \"\",\n          onChange: e => {\n            let numberValue = Number.parseInt(e.target.value);\n            if (numberValue <= 9 && numberValue >= 1 && e.target.value.match(/^\\d+$/) != null) {\n              initial[index][cellIndex].num = Number.parseInt(e.target.value);\n            } else if ((numberValue >= 9 || e.target.value.match(/^\\d+$/) == null) && e.target.value.match(/\\b/) != null && cell.num != 0) {\n              e.target.value = cell.num.toString();\n            } else {\n              e.target.value = \"\";\n            }\n            setEditing(editing + 1);\n          },\n          className: \"input-cell\",\n          readOnly: cell.num != 0,\n          style: cell.num != 0 ? {\n            cursor: \"default\"\n          } : {}\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(BoardDisplay, \"sKzfQJ5qAsfwQAEdVmMsByi8Qis=\");\n_c = BoardDisplay;\nvar _c;\n$RefreshReg$(_c, \"BoardDisplay\");","map":{"version":3,"names":["useEffect","useState","colors","jsxDEV","_jsxDEV","BoardDisplay","initial","_s","editing","setEditing","completedBoard","filter","box","item","num","length","flattenBoard","map","push","rowConflict","row","allNumbers","Array","from","keys","sort","val","noRowConflict","noColConflict","col","console","log","className","children","index","id","toString","cell","cellIndex","style","backgroundColor","defaultValue","onChange","e","numberValue","Number","parseInt","target","value","match","readOnly","cursor","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/annikasingh/Desktop/hi/sudoku-git/sudoku/src/components/display/BoardDisplay.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { colors } from \"./SudokuBoard\";\nimport { Board } from \"./SudokuBoard\";\n\ntype BoardProps = {\n  initial: Board[][];\n};\nexport default function BoardDisplay({ initial }: BoardProps) {\n  const [editing, setEditing] = useState(0);\n\n  useEffect(() => {\n    let completedBoard =\n      initial.filter((box) => box.filter((item) => item.num == 0).length > 0)\n        .length == 0;\n    let flattenBoard: Board[] = [];\n    initial.map((box) => box.map((item) => flattenBoard.push(item)));\n    if (completedBoard) {\n      let rowConflict = flattenBoard.filter((item) => item.row);\n      let allNumbers = Array.from(Array(9).keys()).sort();\n      Array.from(Array(9).keys()).map((val) => {\n        let noRowConflict =\n          flattenBoard\n            .filter((item) => item.row == val)\n            .map((item) => item.num)\n            .sort() == allNumbers;\n        let noColConflict =\n          flattenBoard\n            .filter((item) => item.col == val)\n            .map((item) => item.num)\n            .sort() == allNumbers;\n      });\n    }\n    console.log(completedBoard);\n    console.log(initial);\n  }, [editing]);\n\n  return (\n    <div className=\"board\">\n      {initial.map((box, index) => (\n        <div className=\"grid-box\" id={index.toString()}>\n          {box.map((cell, cellIndex) => (\n            <div\n              className=\"cell-item\"\n              id={cellIndex.toString()}\n              style={{ backgroundColor: colors[index] }}\n            >\n              <input\n                defaultValue={cell.num != 0 ? cell.num : \"\"}\n                onChange={(e) => {\n                  let numberValue = Number.parseInt(e.target.value);\n                  if (\n                    numberValue <= 9 &&\n                    numberValue >= 1 &&\n                    e.target.value.match(/^\\d+$/) != null\n                  ) {\n                    initial[index][cellIndex].num = Number.parseInt(\n                      e.target.value\n                    );\n                  } else if (\n                    (numberValue >= 9 ||\n                      e.target.value.match(/^\\d+$/) == null) &&\n                    e.target.value.match(/\\b/) != null &&\n                    cell.num != 0\n                  ) {\n                    e.target.value = cell.num.toString();\n                  } else {\n                    e.target.value = \"\";\n                  }\n                  setEditing(editing + 1);\n                }}\n                className=\"input-cell\"\n                readOnly={cell.num != 0}\n                style={cell.num != 0 ? { cursor: \"default\" } : {}}\n              />\n            </div>\n          ))}\n        </div>\n      ))}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}