{"ast":null,"code":"var _jsxFileName = \"/Users/annikasingh/Desktop/hi/sudoku/src/components/TestCode.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport \"../styles/board.css\";\nimport { Sudoku } from \"./Sudoku\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TestBoard() {\n  _s();\n  const [showAnswers, setShowAnswers] = useState(false);\n  const colors = [\"#DAB49D\", \"#FD9E72\", \"#F2D492\", \"#A9C5A0\", \"#9DCBBA\", \"#779FA1\", \"#92817A\", \"#96939B\", \"#BFBFBF\"];\n  let sudoku = new Sudoku();\n  sudoku.fillValues();\n  console.log(sudoku.mat);\n  let board = [];\n  [0, 1, 2, 3, 4, 5, 6, 7, 8].map(value => {\n    let box = sudoku.mat.filter(item => item.box == value).map(x => x.num);\n    board.push(box);\n  });\n  let initial = [];\n  [0, 1, 2, 3, 4, 5, 6, 7, 8].map(value => {\n    let box = sudoku.mat.filter(item => item.box == value).map(x => x.num);\n    initial.push(box);\n  });\n  for (let x = 0; x < 9; x++) {\n    for (let y = 0; y < 9; y++) {\n      let number = Math.floor(Math.random() * 2);\n      if (number != 1) {\n        initial[x][y] = 0;\n      }\n    }\n  }\n  return showAnswers ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board\",\n    children: board.map((box, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid-box\",\n      id: index.toString(),\n      children: box.map((cell, cellIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cell-item\",\n        id: cellIndex.toString(),\n        style: {\n          backgroundColor: colors[index]\n        },\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          defaultValue: cell != 0 ? cell : \"\",\n          className: \"input-cell\",\n          readOnly: true,\n          style: {\n            cursor: \"default\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board\",\n      children: initial.map((box, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid-box\",\n          id: index.toString(),\n          children: box.map((cell, cellIndex) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"cell-item\",\n              id: cellIndex.toString(),\n              style: {\n                backgroundColor: colors[index]\n              },\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                defaultValue: cell != 0 ? cell : \"\",\n                onChange: e => {\n                  let numberValue = Number.parseInt(e.target.value);\n                  if (numberValue && numberValue <= 9 && numberValue >= 1) {\n                    initial[index][cellIndex] = Number.parseInt(e.target.value);\n                  } else {\n                    e.target.value = initial[index][cellIndex].toString;\n                  }\n                },\n                className: \"input-cell\",\n                readOnly: cell != 0,\n                style: cell != 0 ? {\n                  cursor: \"default\"\n                } : {}\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(TestBoard, \"L28qL0UFG7AfuBXS3I1wvNX+HQ8=\");\n_c = TestBoard;\nvar _c;\n$RefreshReg$(_c, \"TestBoard\");","map":{"version":3,"names":["useState","Sudoku","jsxDEV","_jsxDEV","Fragment","_Fragment","TestBoard","_s","showAnswers","setShowAnswers","colors","sudoku","fillValues","console","log","mat","board","map","value","box","filter","item","x","num","push","initial","y","number","Math","floor","random","className","children","index","id","toString","cell","cellIndex","style","backgroundColor","defaultValue","readOnly","cursor","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","numberValue","Number","parseInt","target","_c","$RefreshReg$"],"sources":["/Users/annikasingh/Desktop/hi/sudoku/src/components/TestCode.tsx"],"sourcesContent":["import { useState } from \"react\";\nimport \"../styles/board.css\";\nimport { Sudoku } from \"./Sudoku\";\n\nexport type Board = {\n  num: number;\n  box: number;\n  row: number;\n  col: number;\n};\n\nexport default function TestBoard() {\n  const [showAnswers, setShowAnswers] = useState<boolean>(false);\n  const colors = [\n    \"#DAB49D\",\n    \"#FD9E72\",\n    \"#F2D492\",\n    \"#A9C5A0\",\n    \"#9DCBBA\",\n    \"#779FA1\",\n    \"#92817A\",\n    \"#96939B\",\n    \"#BFBFBF\",\n  ];\n\n  let sudoku = new Sudoku();\n  sudoku.fillValues();\n  console.log(sudoku.mat);\n  let board: number[][] = [];\n  [0, 1, 2, 3, 4, 5, 6, 7, 8].map((value) => {\n    let box = sudoku.mat.filter((item) => item.box == value).map((x) => x.num);\n    board.push(box);\n  });\n\n  let initial: number[][] = [];\n  [0, 1, 2, 3, 4, 5, 6, 7, 8].map((value) => {\n    let box = sudoku.mat.filter((item) => item.box == value).map((x) => x.num);\n    initial.push(box);\n  });\n  for (let x = 0; x < 9; x++) {\n    for (let y = 0; y < 9; y++) {\n      let number = Math.floor(Math.random() * 2);\n      if (number != 1) {\n        initial[x][y] = 0;\n      }\n    }\n  }\n\n  return showAnswers ? (\n    <div className=\"board\">\n      {board.map((box, index) => (\n        <div className=\"grid-box\" id={index.toString()}>\n          {box.map((cell, cellIndex) => (\n            <div\n              className=\"cell-item\"\n              id={cellIndex.toString()}\n              style={{ backgroundColor: colors[index] }}\n            >\n              <input\n                defaultValue={cell != 0 ? cell : \"\"}\n                className=\"input-cell\"\n                readOnly={true}\n                style={{ cursor: \"default\" }}\n              />\n            </div>\n          ))}\n        </div>\n      ))}\n    </div>\n  ) : (\n    <>\n      <div className=\"board\">\n        {initial.map((box, index) => {\n          return (\n            <div className=\"grid-box\" id={index.toString()}>\n              {box.map((cell, cellIndex) => {\n                return (\n                  <div\n                    className=\"cell-item\"\n                    id={cellIndex.toString()}\n                    style={{ backgroundColor: colors[index] }}\n                  >\n                    <input\n                      defaultValue={cell != 0 ? cell : \"\"}\n                      onChange={(e) => {\n                        let numberValue = Number.parseInt(e.target.value);\n                        if (\n                          numberValue &&\n                          numberValue <= 9 &&\n                          numberValue >= 1\n                        ) {\n                          initial[index][cellIndex] = Number.parseInt(\n                            e.target.value\n                          );\n                        } else {\n                          e.target.value = initial[index][cellIndex].toString;\n                        }\n                      }}\n                      className=\"input-cell\"\n                      readOnly={cell != 0}\n                      style={cell != 0 ? { cursor: \"default\" } : {}}\n                    />\n                  </div>\n                );\n              })}\n            </div>\n          );\n        })}\n      </div>\n    </>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}