{"ast":null,"code":"export function CreateBoard() {\n  let board = [];\n  for (let i = 0; i < 9; i++) {\n    board = [...board, ...CreateBox(board, i)];\n  }\n  return board;\n}\n_c = CreateBoard;\nfunction DiagonalBoxes() {\n  let board = [];\n  for (let i = 0; i < 9; i += 4) {\n    let numbers = shuffleArray(Array.from(Array(9).keys()).map(num => num + 1));\n  }\n}\n_c2 = DiagonalBoxes;\nfunction CreateBox(board, row) {\n  let conflict = true;\n  let newRow = [];\n  while (conflict) {\n    let nums = Array.from(Array(9).keys()).map(num => num + 1);\n    let possibleIndices = shuffleArray(nums.map(item => item - 1));\n    for (let i = 0; i < 9; i++) {\n      let newItemNum = nums.pop() || 9;\n      let colNumber = possibleIndices.pop() || 8;\n      let rowNumber = row;\n      let boxNumber = Math.floor(colNumber / 3);\n      newRow.push({\n        num: newItemNum,\n        row: rowNumber,\n        col: colNumber,\n        box: boxNumber\n      });\n    }\n    conflict = false;\n    for (let i = 0; i < 9; i++) {\n      if (board.filter(item => item.col == newRow[i].col && item.num == newRow[i].num).length > 0 || board.filter(item => item.box == newRow[i].box && item.num == newRow[i].num).length > 0) {\n        conflict = true;\n      }\n    }\n  }\n  return newRow;\n}\n\n// From GeeksforGeeks\n_c3 = CreateBox;\nfunction shuffleArray(array) {\n  for (var i = array.length - 1; i > 0; i--) {\n    var j = Math.floor(Math.random() * (i + 1));\n    var temp = array[i];\n    array[i] = array[j];\n    array[j] = temp;\n  }\n  return array;\n}\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"CreateBoard\");\n$RefreshReg$(_c2, \"DiagonalBoxes\");\n$RefreshReg$(_c3, \"CreateBox\");","map":{"version":3,"names":["CreateBoard","board","i","CreateBox","_c","DiagonalBoxes","numbers","shuffleArray","Array","from","keys","map","num","_c2","row","conflict","newRow","nums","possibleIndices","item","newItemNum","pop","colNumber","rowNumber","boxNumber","Math","floor","push","col","box","filter","length","_c3","array","j","random","temp","$RefreshReg$"],"sources":["/Users/annikasingh/Desktop/hi/sudoku/src/components/CreateBoard.tsx"],"sourcesContent":["import { Board } from \"./TestBoard\";\n\nexport function CreateBoard(): Board[] {\n  let board: Board[] = [];\n  for (let i = 0; i < 9; i++) {\n    board = [...board, ...CreateBox(board, i)] as Board[];\n  }\n  return board;\n}\n\nfunction DiagonalBoxes() {\n  let board: Board[] = [];\n  for (let i = 0; i < 9; i += 4) {\n    let numbers = shuffleArray(\n      Array.from(Array(9).keys()).map((num) => num + 1)\n    );\n  }\n}\n\nfunction CreateBox(board: Board[], row: number): Board[] {\n  let conflict = true;\n  let newRow: Board[] = [];\n  while (conflict) {\n    let nums = Array.from(Array(9).keys()).map((num) => num + 1);\n    let possibleIndices = shuffleArray(nums.map((item) => item - 1));\n    for (let i = 0; i < 9; i++) {\n      let newItemNum = nums.pop() || 9;\n      let colNumber = possibleIndices.pop() || 8;\n      let rowNumber = row;\n      let boxNumber = Math.floor(colNumber / 3);\n      newRow.push({\n        num: newItemNum,\n        row: rowNumber,\n        col: colNumber,\n        box: boxNumber,\n      });\n    }\n    conflict = false;\n    for (let i = 0; i < 9; i++) {\n      if (\n        board.filter(\n          (item) => item.col == newRow[i].col && item.num == newRow[i].num\n        ).length > 0 ||\n        board.filter(\n          (item) => item.box == newRow[i].box && item.num == newRow[i].num\n        ).length > 0\n      ) {\n        conflict = true;\n      }\n    }\n  }\n  return newRow;\n}\n\n// From GeeksforGeeks\nfunction shuffleArray(array: any[]): any[] {\n  for (var i = array.length - 1; i > 0; i--) {\n    var j = Math.floor(Math.random() * (i + 1));\n\n    var temp = array[i];\n    array[i] = array[j];\n    array[j] = temp;\n  }\n\n  return array;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}