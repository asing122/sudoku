{"ast":null,"code":"var _jsxFileName = \"/Users/annikasingh/Desktop/hi/sudoku-git/sudoku/src/components/display/BoardDisplay.tsx\";\nimport { colors } from \"./SudokuBoard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function BoardDisplay({\n  initial\n}) {\n  function boardFilled() {\n    let completedBoard = initial.filter(box => box.filter(item => item.num == 0).length > 0).length == 0;\n    let flattenBoard = [];\n    initial.map(box => box.map(item => flattenBoard.push(item)));\n    if (true) {\n      let allNumbers = Array.from(Array(9).keys()).map(item => item + 1).sort();\n      let conflict = false;\n      Array.from(Array(9).keys()).map(val => {\n        let rowConflict = flattenBoard.filter(item => item.row == val).map(item => item.num).sort().toString() !== /*#__PURE__*/_jsxDEV(\"allNumbers\", {\n          className: \"toSt\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 29\n        }, this)();\n        console.log(flattenBoard.filter(item => item.row == val).map(item => item.num).sort());\n        console.log(allNumbers);\n        let colConflict = flattenBoard.filter(item => item.col == val).map(item => item.num).sort() != allNumbers;\n        let boxConflict = flattenBoard.filter(item => item.box == val).map(item => item.num).sort() != allNumbers;\n        console.log(rowConflict);\n        console.log(colConflict);\n        console.log(boxConflict);\n        if (rowConflict || colConflict || boxConflict) {\n          conflict = true;\n        }\n      });\n      if (!conflict) {\n        console.log(\"yay\");\n      }\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board\",\n    children: initial.map((box, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid-box\",\n      id: index.toString(),\n      children: box.map((cell, cellIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cell-item\",\n        id: cellIndex.toString(),\n        style: {\n          backgroundColor: colors[index]\n        },\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          defaultValue: cell.num != 0 ? cell.num : \"\",\n          onChange: e => {\n            let numberValue = Number.parseInt(e.target.value);\n            if (numberValue <= 9 && numberValue >= 1 && e.target.value.match(/^\\d+$/) != null) {\n              initial[index][cellIndex].num = Number.parseInt(e.target.value);\n            } else if ((numberValue >= 9 || e.target.value.match(/^\\d+$/) == null) && e.target.value.match(/\\b/) != null && cell.num != 0) {\n              e.target.value = cell.num.toString();\n            } else {\n              e.target.value = \"\";\n            }\n            boardFilled();\n          },\n          className: \"input-cell\",\n          readOnly: initial[index][cellIndex].num != 0,\n          style: initial[index][cellIndex].num != 0 ? {\n            cursor: \"default\"\n          } : {}\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_c = BoardDisplay;\nvar _c;\n$RefreshReg$(_c, \"BoardDisplay\");","map":{"version":3,"names":["colors","jsxDEV","_jsxDEV","BoardDisplay","initial","boardFilled","completedBoard","filter","box","item","num","length","flattenBoard","map","push","allNumbers","Array","from","keys","sort","conflict","val","rowConflict","row","toString","className","fileName","_jsxFileName","lineNumber","columnNumber","console","log","colConflict","col","boxConflict","children","index","id","cell","cellIndex","style","backgroundColor","defaultValue","onChange","e","numberValue","Number","parseInt","target","value","match","readOnly","cursor","_c","$RefreshReg$"],"sources":["/Users/annikasingh/Desktop/hi/sudoku-git/sudoku/src/components/display/BoardDisplay.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { colors } from \"./SudokuBoard\";\nimport { Board } from \"./SudokuBoard\";\n\ntype BoardProps = {\n  initial: Board[][];\n};\nexport default function BoardDisplay({ initial }: BoardProps) {\n  function boardFilled() {\n    let completedBoard =\n      initial.filter((box) => box.filter((item) => item.num == 0).length > 0)\n        .length == 0;\n\n    let flattenBoard: Board[] = [];\n    initial.map((box) => box.map((item) => flattenBoard.push(item)));\n    if (true) {\n      let allNumbers = Array.from(Array(9).keys())\n        .map((item) => item + 1)\n        .sort();\n      let conflict = false;\n      Array.from(Array(9).keys()).map((val) => {\n        let rowConflict =\n          flattenBoard\n            .filter((item) => item.row == val)\n            .map((item) => item.num)\n            .sort()\n            .toString() !== <allNumbers className=\"toSt\"></allNumbers>();\n        console.log(\n          flattenBoard\n            .filter((item) => item.row == val)\n            .map((item) => item.num)\n            .sort()\n        );\n        console.log(allNumbers);\n        let colConflict =\n          flattenBoard\n            .filter((item) => item.col == val)\n            .map((item) => item.num)\n            .sort() != allNumbers;\n        let boxConflict =\n          flattenBoard\n            .filter((item) => item.box == val)\n            .map((item) => item.num)\n            .sort() != allNumbers;\n        console.log(rowConflict);\n        console.log(colConflict);\n        console.log(boxConflict);\n        if (rowConflict || colConflict || boxConflict) {\n          conflict = true;\n        }\n      });\n      if (!conflict) {\n        console.log(\"yay\");\n      }\n    }\n  }\n\n  return (\n    <div className=\"board\">\n      {initial.map((box, index) => (\n        <div className=\"grid-box\" id={index.toString()}>\n          {box.map((cell, cellIndex) => (\n            <div\n              className=\"cell-item\"\n              id={cellIndex.toString()}\n              style={{ backgroundColor: colors[index] }}\n            >\n              <input\n                defaultValue={cell.num != 0 ? cell.num : \"\"}\n                onChange={(e) => {\n                  let numberValue = Number.parseInt(e.target.value);\n                  if (\n                    numberValue <= 9 &&\n                    numberValue >= 1 &&\n                    e.target.value.match(/^\\d+$/) != null\n                  ) {\n                    initial[index][cellIndex].num = Number.parseInt(\n                      e.target.value\n                    );\n                  } else if (\n                    (numberValue >= 9 ||\n                      e.target.value.match(/^\\d+$/) == null) &&\n                    e.target.value.match(/\\b/) != null &&\n                    cell.num != 0\n                  ) {\n                    e.target.value = cell.num.toString();\n                  } else {\n                    e.target.value = \"\";\n                  }\n                  boardFilled();\n                }}\n                className=\"input-cell\"\n                readOnly={initial[index][cellIndex].num != 0}\n                style={\n                  initial[index][cellIndex].num != 0\n                    ? { cursor: \"default\" }\n                    : {}\n                }\n              />\n            </div>\n          ))}\n        </div>\n      ))}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}