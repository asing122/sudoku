{"ast":null,"code":"var _jsxFileName = \"/Users/annikasingh/Desktop/hi/sudoku/src/components/TestBoard.tsx\";\nimport \"../styles/board.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TestBoard() {\n  const colors = [\"#DAB49D\", \"#F29559\", \"#F2D492\", \"#A9C5A0\", \"#9DCBBA\", \"#779FA1\", \"#92817A\", \"#979B8D\", \"#F1DABF\" //#DAB49D pink\n  ];\n  let board = [];\n  let initial = [];\n  /*for (let i = 0; i < 81; i += 1) {\n    let numberOptions = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n    let rowNumber = Math.floor(i / 9);\n    let colNumber = i % 9;\n    let boxNumber = ((i - (i % 3)) / 3) % 9;\n    let index = 5;\n    let conflict = true;\n    let tries = 0;\n    while (tries < 15) {\n      index = Math.floor(Math.random() * 9 + 1);\n      conflict =\n        board.filter((item) => item.row == rowNumber && item.num == index)\n          .length > 0 ||\n        board.filter((item) => item.col == colNumber && item.num == index)\n          .length > 0 ||\n        board.filter((item) => item.box == boxNumber && item.num == index)\n          .length > 0;\n      if (!conflict) {\n        break;\n      }\n      tries++;\n    }\n    if (!conflict) {\n      board.push({\n        num: index,\n        col: colNumber,\n        row: rowNumber,\n        box: boxNumber,\n      });\n    } else {\n      board.push({\n        num: 0,\n        col: colNumber,\n        row: rowNumber,\n        box: boxNumber,\n      });\n    }\n  }*/\n  createBox(board, 0);\n  [0, 1, 2, 3, 4, 5, 6, 7, 8].map(value => {\n    let box = board.filter(item => item.box == value).map(x => x.num);\n    initial.push(box);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board\",\n    children: initial.map((box, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid-box\",\n        id: index.toString(),\n        children: box.map((cell, cellIndex) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cell-item\",\n            id: cellIndex.toString(),\n            style: {\n              backgroundColor: colors[index]\n            },\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              defaultValue: cell != 0 ? cell : \"\",\n              onChange: e => {\n                let numberValue = Number.parseInt(e.target.value);\n                if (numberValue && numberValue <= 9 && numberValue >= 1) {\n                  initial[index][cellIndex] = Number.parseInt(e.target.value);\n                } else {\n                  e.target.value = \"\";\n                }\n              },\n              className: \"input-cell\",\n              contentEditable: cell == 0\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n_c = TestBoard;\nvar _c;\n$RefreshReg$(_c, \"TestBoard\");","map":{"version":3,"names":["jsxDEV","_jsxDEV","TestBoard","colors","board","initial","createBox","map","value","box","filter","item","x","num","push","className","children","index","id","toString","cell","cellIndex","style","backgroundColor","defaultValue","onChange","e","numberValue","Number","parseInt","target","contentEditable","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/annikasingh/Desktop/hi/sudoku/src/components/TestBoard.tsx"],"sourcesContent":["import \"../styles/board.css\";\n\nexport type Board = {\n  num: number;\n  box: number;\n  row: number;\n  col: number;\n};\n\nexport default function TestBoard() {\n  const colors = [\n    \"#DAB49D\",\n    \"#F29559\",\n    \"#F2D492\",\n    \"#A9C5A0\",\n    \"#9DCBBA\",\n    \"#779FA1\",\n    \"#92817A\",\n    \"#979B8D\",\n    \"#F1DABF\", //#DAB49D pink\n  ];\n\n  let board: Board[] = [];\n  let initial: number[][] = [];\n  /*for (let i = 0; i < 81; i += 1) {\n    let numberOptions = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n    let rowNumber = Math.floor(i / 9);\n    let colNumber = i % 9;\n    let boxNumber = ((i - (i % 3)) / 3) % 9;\n    let index = 5;\n    let conflict = true;\n    let tries = 0;\n    while (tries < 15) {\n      index = Math.floor(Math.random() * 9 + 1);\n      conflict =\n        board.filter((item) => item.row == rowNumber && item.num == index)\n          .length > 0 ||\n        board.filter((item) => item.col == colNumber && item.num == index)\n          .length > 0 ||\n        board.filter((item) => item.box == boxNumber && item.num == index)\n          .length > 0;\n      if (!conflict) {\n        break;\n      }\n      tries++;\n    }\n    if (!conflict) {\n      board.push({\n        num: index,\n        col: colNumber,\n        row: rowNumber,\n        box: boxNumber,\n      });\n    } else {\n      board.push({\n        num: 0,\n        col: colNumber,\n        row: rowNumber,\n        box: boxNumber,\n      });\n    }\n  }*/\n  createBox(board, 0);\n  [0, 1, 2, 3, 4, 5, 6, 7, 8].map((value) => {\n    let box = board.filter((item) => item.box == value).map((x) => x.num);\n    initial.push(box);\n  });\n  return (\n    <div className=\"board\">\n      {initial.map((box, index) => {\n        return (\n          <div className=\"grid-box\" id={index.toString()}>\n            {box.map((cell, cellIndex) => {\n              return (\n                <div\n                  className=\"cell-item\"\n                  id={cellIndex.toString()}\n                  style={{ backgroundColor: colors[index] }}\n                >\n                  <input\n                    defaultValue={cell != 0 ? cell : \"\"}\n                    onChange={(e) => {\n                      let numberValue = Number.parseInt(e.target.value);\n                      if (numberValue && numberValue <= 9 && numberValue >= 1) {\n                        initial[index][cellIndex] = Number.parseInt(\n                          e.target.value\n                        );\n                      } else {\n                        e.target.value = \"\";\n                      }\n                    }}\n                    className=\"input-cell\"\n                    contentEditable={cell == 0}\n                  />\n                </div>\n              );\n            })}\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}