{"ast":null,"code":"var _jsxFileName = \"/Users/annikasingh/Desktop/hi/sudoku/src/components/TestCode.tsx\";\nimport \"../styles/board.css\";\nimport { Sudoku } from \"./Sudoku\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TestBoard() {\n  const colors = [\"#DAB49D\", \"#F29559\", \"#F2D492\", \"#A9C5A0\", \"#9DCBBA\", \"#779FA1\", \"#92817A\", \"#979B8D\", \"#F1DABF\" //#DAB49D pink\n  ];\n  let N = 9;\n  let K = 40;\n  let sudoku = new Sudoku(N, K);\n  sudoku.fillValues();\n  console.log(sudoku.mat);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board\",\n    children: [sudoku.mat.map((box, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cell-item\",\n      id: cellIndex.toString(),\n      style: {\n        backgroundColor: colors[index]\n      },\n      children: box.map((cell, cellIndex) => /*#__PURE__*/_jsxDEV(\"input\", {\n        defaultValue: cell != 0 ? cell : \"\",\n        onChange: e => {\n          let numberValue = Number.parseInt(e.target.value);\n          if (numberValue && numberValue <= 9 && numberValue >= 1) {\n            sudoku.mat[index][cellIndex] = Number.parseInt(e.target.value);\n          } else {\n            e.target.value = \"\";\n          }\n        },\n        className: \"input-cell\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cell-item\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_c = TestBoard;\nvar _c;\n$RefreshReg$(_c, \"TestBoard\");","map":{"version":3,"names":["Sudoku","jsxDEV","_jsxDEV","TestBoard","colors","N","K","sudoku","fillValues","console","log","mat","className","children","map","box","index","id","cellIndex","toString","style","backgroundColor","cell","defaultValue","onChange","e","numberValue","Number","parseInt","target","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/annikasingh/Desktop/hi/sudoku/src/components/TestCode.tsx"],"sourcesContent":["import \"../styles/board.css\";\nimport { CreateBoard } from \"./CreateBoard\";\nimport { Sudoku } from \"./Sudoku\";\n\nexport type Board = {\n  num: number;\n  box: number;\n  row: number;\n  col: number;\n};\n\nexport default function TestBoard() {\n  const colors = [\n    \"#DAB49D\",\n    \"#F29559\",\n    \"#F2D492\",\n    \"#A9C5A0\",\n    \"#9DCBBA\",\n    \"#779FA1\",\n    \"#92817A\",\n    \"#979B8D\",\n    \"#F1DABF\", //#DAB49D pink\n  ];\n\n  let N = 9;\n  let K = 40;\n  let sudoku = new Sudoku(N, K);\n  sudoku.fillValues();\n  console.log(sudoku.mat);\n\n  return (\n    <div className=\"board\">\n      {sudoku.mat.map((box: number[], index: number) => (\n        <div\n          className=\"cell-item\"\n          id={cellIndex.toString()}\n          style={{ backgroundColor: colors[index] }}\n        >\n          {box.map((cell: number, cellIndex: number) => (\n            <input\n              defaultValue={cell != 0 ? cell : \"\"}\n              onChange={(e) => {\n                let numberValue = Number.parseInt(e.target.value);\n                if (numberValue && numberValue <= 9 && numberValue >= 1) {\n                  sudoku.mat[index][cellIndex] = Number.parseInt(\n                    e.target.value\n                  );\n                } else {\n                  e.target.value = \"\";\n                }\n              }}\n              className=\"input-cell\"\n            />\n          ))}\n        </div>\n      ))}\n      <div className=\"cell-item\"></div>\n    </div>\n  );\n}\n"],"mappings":";AAAA,OAAO,qBAAqB;AAE5B,SAASA,MAAM,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AASlC,eAAe,SAASC,SAASA,CAAA,EAAG;EAClC,MAAMC,MAAM,GAAG,CACb,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,CAAE;EAAA,CACZ;EAED,IAAIC,CAAC,GAAG,CAAC;EACT,IAAIC,CAAC,GAAG,EAAE;EACV,IAAIC,MAAM,GAAG,IAAIP,MAAM,CAACK,CAAC,EAAEC,CAAC,CAAC;EAC7BC,MAAM,CAACC,UAAU,CAAC,CAAC;EACnBC,OAAO,CAACC,GAAG,CAACH,MAAM,CAACI,GAAG,CAAC;EAEvB,oBACET,OAAA;IAAKU,SAAS,EAAC,OAAO;IAAAC,QAAA,GACnBN,MAAM,CAACI,GAAG,CAACG,GAAG,CAAC,CAACC,GAAa,EAAEC,KAAa,kBAC3Cd,OAAA;MACEU,SAAS,EAAC,WAAW;MACrBK,EAAE,EAAEC,SAAS,CAACC,QAAQ,CAAC,CAAE;MACzBC,KAAK,EAAE;QAAEC,eAAe,EAAEjB,MAAM,CAACY,KAAK;MAAE,CAAE;MAAAH,QAAA,EAEzCE,GAAG,CAACD,GAAG,CAAC,CAACQ,IAAY,EAAEJ,SAAiB,kBACvChB,OAAA;QACEqB,YAAY,EAAED,IAAI,IAAI,CAAC,GAAGA,IAAI,GAAG,EAAG;QACpCE,QAAQ,EAAGC,CAAC,IAAK;UACf,IAAIC,WAAW,GAAGC,MAAM,CAACC,QAAQ,CAACH,CAAC,CAACI,MAAM,CAACC,KAAK,CAAC;UACjD,IAAIJ,WAAW,IAAIA,WAAW,IAAI,CAAC,IAAIA,WAAW,IAAI,CAAC,EAAE;YACvDnB,MAAM,CAACI,GAAG,CAACK,KAAK,CAAC,CAACE,SAAS,CAAC,GAAGS,MAAM,CAACC,QAAQ,CAC5CH,CAAC,CAACI,MAAM,CAACC,KACX,CAAC;UACH,CAAC,MAAM;YACLL,CAAC,CAACI,MAAM,CAACC,KAAK,GAAG,EAAE;UACrB;QACF,CAAE;QACFlB,SAAS,EAAC;MAAY;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvB,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CACN,CAAC,eACFhC,OAAA;MAAKU,SAAS,EAAC;IAAW;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9B,CAAC;AAEV;AAACC,EAAA,GAhDuBhC,SAAS;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}