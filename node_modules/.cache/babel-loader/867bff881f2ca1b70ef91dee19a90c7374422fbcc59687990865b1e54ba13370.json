{"ast":null,"code":"var _jsxFileName = \"/Users/annikasingh/Desktop/hi/sudoku/src/components/TestCode.tsx\";\nimport \"../styles/board.css\";\nimport { Sudoku } from \"./Sudoku\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TestBoard() {\n  const colors = [\"#DAB49D\", \"#F29559\", \"#F2D492\", \"#A9C5A0\", \"#9DCBBA\", \"#779FA1\", \"#92817A\", \"#979B8D\", \"##96939B\" //#DAB49D pink\n  ];\n  let N = 9;\n  let K = 40;\n  let sudoku = new Sudoku(N, K);\n  sudoku.fillValues();\n  console.log(sudoku.mat);\n  let board = Array.from({\n    length: 9\n  }, () => Array.from({\n    length: 9\n  }));\n  sudoku.mat.map((item, index) => board[Math.floor(index / 9)][index % 9] = item);\n  console.log(board);\n  let initial = [];\n  [0, 1, 2, 3, 4, 5, 6, 7, 8].map(value => {\n    let box = sudoku.mat.filter(item => item.box == value).map(x => x.num);\n    initial.push(box);\n  });\n  console.log(initial);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board\",\n    children: initial.map((box, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid-box\",\n        id: index.toString(),\n        children: box.map((cell, cellIndex) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cell-item\",\n            id: cellIndex.toString(),\n            style: {\n              backgroundColor: colors[index]\n            },\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              defaultValue: cell != 0 ? cell : \"\",\n              onChange: e => {\n                let numberValue = Number.parseInt(e.target.value);\n                if (numberValue && numberValue <= 9 && numberValue >= 1) {\n                  initial[index][cellIndex] = Number.parseInt(e.target.value);\n                } else {\n                  e.target.value = \"\";\n                }\n              },\n              className: \"input-cell\",\n              contentEditable: cell == 0\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_c = TestBoard;\nvar _c;\n$RefreshReg$(_c, \"TestBoard\");","map":{"version":3,"names":["Sudoku","jsxDEV","_jsxDEV","TestBoard","colors","N","K","sudoku","fillValues","console","log","mat","board","Array","from","length","map","item","index","Math","floor","initial","value","box","filter","x","num","push","className","children","id","toString","cell","cellIndex","style","backgroundColor","defaultValue","onChange","e","numberValue","Number","parseInt","target","contentEditable","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/annikasingh/Desktop/hi/sudoku/src/components/TestCode.tsx"],"sourcesContent":["import \"../styles/board.css\";\nimport { CreateBoard } from \"./CreateBoard\";\nimport { NewBoard, Sudoku } from \"./Sudoku\";\n\nexport type Board = {\n  num: number;\n  box: number;\n  row: number;\n  col: number;\n};\n\nexport default function TestBoard() {\n  const colors = [\n    \"#DAB49D\",\n    \"#F29559\",\n    \"#F2D492\",\n    \"#A9C5A0\",\n    \"#9DCBBA\",\n    \"#779FA1\",\n    \"#92817A\",\n    \"#979B8D\",\n    \"##96939B\", //#DAB49D pink\n  ];\n\n  let N = 9;\n  let K = 40;\n  let sudoku = new Sudoku(N, K);\n  sudoku.fillValues();\n  console.log(sudoku.mat);\n  let board: NewBoard[][] = Array.from(\n    {\n      length: 9,\n    },\n    () =>\n      Array.from({\n        length: 9,\n      })\n  );\n  sudoku.mat.map(\n    (item, index) => (board[Math.floor(index / 9)][index % 9] = item)\n  );\n  console.log(board);\n  let initial: number[][] = [];\n  [0, 1, 2, 3, 4, 5, 6, 7, 8].map((value) => {\n    let box = sudoku.mat.filter((item) => item.box == value).map((x) => x.num);\n    initial.push(box);\n  });\n  console.log(initial);\n\n  return (\n    <div className=\"board\">\n      {/*sudoku.mat.map((row: number[], index: number) => (\n        <div className=\"grid-box\" id={index.toString()}>\n          {row.map((cell: number, cellIndex: number) => (\n            <div\n              className=\"cell-item\"\n              id={cellIndex.toString()}\n              style={{ backgroundColor: colors[index] }}\n            >\n              <input\n                defaultValue={cell}\n                onChange={(e) => {\n                  let numberValue = Number.parseInt(e.target.value);\n                  if (numberValue && numberValue <= 9 && numberValue >= 1) {\n                    sudoku.mat[index][cellIndex] = Number.parseInt(\n                      e.target.value\n                    );\n                  } else {\n                    e.target.value = \"\";\n                  }\n                }}\n                className=\"input-cell\"\n              />\n            </div>\n          ))}\n        </div>\n      ))*/}\n      {initial.map((box, index) => {\n        return (\n          <div className=\"grid-box\" id={index.toString()}>\n            {box.map((cell, cellIndex) => {\n              return (\n                <div\n                  className=\"cell-item\"\n                  id={cellIndex.toString()}\n                  style={{ backgroundColor: colors[index] }}\n                >\n                  <input\n                    defaultValue={cell != 0 ? cell : \"\"}\n                    onChange={(e) => {\n                      let numberValue = Number.parseInt(e.target.value);\n                      if (numberValue && numberValue <= 9 && numberValue >= 1) {\n                        initial[index][cellIndex] = Number.parseInt(\n                          e.target.value\n                        );\n                      } else {\n                        e.target.value = \"\";\n                      }\n                    }}\n                    className=\"input-cell\"\n                    contentEditable={cell == 0}\n                  />\n                </div>\n              );\n            })}\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}