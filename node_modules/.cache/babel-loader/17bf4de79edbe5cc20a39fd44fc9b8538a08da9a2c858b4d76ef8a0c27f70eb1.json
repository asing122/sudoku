{"ast":null,"code":"export function CreateBoard() {\n  let board = [];\n  for (let i = 0; i < 9; i++) {\n    board = [...board, CreateBox(board, i)];\n  }\n  return board;\n}\n_c = CreateBoard;\nfunction CreateBox(board, row) {\n  let conflict = true;\n  let newRow = [];\n  while (conflict) {\n    let nums = Array.from(Array(9).keys()).map(num => num + 1);\n    let possibleIndices = shuffleArray(nums);\n    for (let i = 0; i < 9; i++) {\n      let newItemNum = nums.pop() || 9;\n      let colNumber = possibleIndices.pop() || 9;\n      let rowNumber = row;\n      let boxNumber = Math.floor(colNumber / 3);\n      newRow.push({\n        num: newItemNum,\n        row: rowNumber,\n        col: colNumber,\n        box: boxNumber\n      });\n    }\n    conflict = false;\n    for (let i = 0; i < 9; i++) {\n      if (board.filter(item => item.col == newRow[i].col && item.num == newRow[i].num).length > 0 || board.filter(item => item.box == newRow[i].box && item.num == newRow[i].num).length > 0) {\n        conflict = true;\n      }\n    }\n  }\n  return newRow;\n}\n\n// From GeeksforGeeks\n_c2 = CreateBox;\nfunction shuffleArray(array) {\n  let newArray = array;\n  for (var i = newArray.length - 1; i > 0; i--) {\n    var j = Math.floor(Math.random() * (i + 1));\n    var temp = newArray[i];\n    newArray[i] = array[j];\n    newArray[j] = temp;\n  }\n  return newArray;\n}\nvar _c, _c2;\n$RefreshReg$(_c, \"CreateBoard\");\n$RefreshReg$(_c2, \"CreateBox\");","map":{"version":3,"names":["CreateBoard","board","i","CreateBox","_c","row","conflict","newRow","nums","Array","from","keys","map","num","possibleIndices","shuffleArray","newItemNum","pop","colNumber","rowNumber","boxNumber","Math","floor","push","col","box","filter","item","length","_c2","array","newArray","j","random","temp","$RefreshReg$"],"sources":["/Users/annikasingh/Desktop/hi/sudoku/src/components/CreateBoard.tsx"],"sourcesContent":["import { Board } from \"./TestBoard\";\n\nexport function CreateBoard(): Board[] {\n  let board: Board[] = [];\n  for (let i = 0; i < 9; i++) {\n    board = [...board, CreateBox(board, i)] as Board[];\n  }\n  return board;\n}\n\nfunction CreateBox(board: Board[], row: number): Board[] {\n  let conflict = true;\n  let newRow: Board[] = [];\n  while (conflict) {\n    let nums = Array.from(Array(9).keys()).map((num) => num + 1);\n    let possibleIndices = shuffleArray(nums);\n    for (let i = 0; i < 9; i++) {\n      let newItemNum = nums.pop() || 9;\n      let colNumber = possibleIndices.pop() || 9;\n      let rowNumber = row;\n      let boxNumber = Math.floor(colNumber / 3);\n      newRow.push({\n        num: newItemNum,\n        row: rowNumber,\n        col: colNumber,\n        box: boxNumber,\n      });\n    }\n    conflict = false;\n    for (let i = 0; i < 9; i++) {\n      if (\n        board.filter(\n          (item) => item.col == newRow[i].col && item.num == newRow[i].num\n        ).length > 0 ||\n        board.filter(\n          (item) => item.box == newRow[i].box && item.num == newRow[i].num\n        ).length > 0\n      ) {\n        conflict = true;\n      }\n    }\n  }\n  return newRow;\n}\n\n// From GeeksforGeeks\nfunction shuffleArray(array: number[]): number[] {\n  let newArray = array;\n  for (var i = newArray.length - 1; i > 0; i--) {\n    var j = Math.floor(Math.random() * (i + 1));\n\n    var temp = newArray[i];\n    newArray[i] = array[j];\n    newArray[j] = temp;\n  }\n\n  return newArray;\n}\n"],"mappings":"AAEA,OAAO,SAASA,WAAWA,CAAA,EAAY;EACrC,IAAIC,KAAc,GAAG,EAAE;EACvB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;IAC1BD,KAAK,GAAG,CAAC,GAAGA,KAAK,EAAEE,SAAS,CAACF,KAAK,EAAEC,CAAC,CAAC,CAAY;EACpD;EACA,OAAOD,KAAK;AACd;AAACG,EAAA,GANeJ,WAAW;AAQ3B,SAASG,SAASA,CAACF,KAAc,EAAEI,GAAW,EAAW;EACvD,IAAIC,QAAQ,GAAG,IAAI;EACnB,IAAIC,MAAe,GAAG,EAAE;EACxB,OAAOD,QAAQ,EAAE;IACf,IAAIE,IAAI,GAAGC,KAAK,CAACC,IAAI,CAACD,KAAK,CAAC,CAAC,CAAC,CAACE,IAAI,CAAC,CAAC,CAAC,CAACC,GAAG,CAAEC,GAAG,IAAKA,GAAG,GAAG,CAAC,CAAC;IAC5D,IAAIC,eAAe,GAAGC,YAAY,CAACP,IAAI,CAAC;IACxC,KAAK,IAAIN,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;MAC1B,IAAIc,UAAU,GAAGR,IAAI,CAACS,GAAG,CAAC,CAAC,IAAI,CAAC;MAChC,IAAIC,SAAS,GAAGJ,eAAe,CAACG,GAAG,CAAC,CAAC,IAAI,CAAC;MAC1C,IAAIE,SAAS,GAAGd,GAAG;MACnB,IAAIe,SAAS,GAAGC,IAAI,CAACC,KAAK,CAACJ,SAAS,GAAG,CAAC,CAAC;MACzCX,MAAM,CAACgB,IAAI,CAAC;QACVV,GAAG,EAAEG,UAAU;QACfX,GAAG,EAAEc,SAAS;QACdK,GAAG,EAAEN,SAAS;QACdO,GAAG,EAAEL;MACP,CAAC,CAAC;IACJ;IACAd,QAAQ,GAAG,KAAK;IAChB,KAAK,IAAIJ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;MAC1B,IACED,KAAK,CAACyB,MAAM,CACTC,IAAI,IAAKA,IAAI,CAACH,GAAG,IAAIjB,MAAM,CAACL,CAAC,CAAC,CAACsB,GAAG,IAAIG,IAAI,CAACd,GAAG,IAAIN,MAAM,CAACL,CAAC,CAAC,CAACW,GAC/D,CAAC,CAACe,MAAM,GAAG,CAAC,IACZ3B,KAAK,CAACyB,MAAM,CACTC,IAAI,IAAKA,IAAI,CAACF,GAAG,IAAIlB,MAAM,CAACL,CAAC,CAAC,CAACuB,GAAG,IAAIE,IAAI,CAACd,GAAG,IAAIN,MAAM,CAACL,CAAC,CAAC,CAACW,GAC/D,CAAC,CAACe,MAAM,GAAG,CAAC,EACZ;QACAtB,QAAQ,GAAG,IAAI;MACjB;IACF;EACF;EACA,OAAOC,MAAM;AACf;;AAEA;AAAAsB,GAAA,GAnCS1B,SAAS;AAoClB,SAASY,YAAYA,CAACe,KAAe,EAAY;EAC/C,IAAIC,QAAQ,GAAGD,KAAK;EACpB,KAAK,IAAI5B,CAAC,GAAG6B,QAAQ,CAACH,MAAM,GAAG,CAAC,EAAE1B,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;IAC5C,IAAI8B,CAAC,GAAGX,IAAI,CAACC,KAAK,CAACD,IAAI,CAACY,MAAM,CAAC,CAAC,IAAI/B,CAAC,GAAG,CAAC,CAAC,CAAC;IAE3C,IAAIgC,IAAI,GAAGH,QAAQ,CAAC7B,CAAC,CAAC;IACtB6B,QAAQ,CAAC7B,CAAC,CAAC,GAAG4B,KAAK,CAACE,CAAC,CAAC;IACtBD,QAAQ,CAACC,CAAC,CAAC,GAAGE,IAAI;EACpB;EAEA,OAAOH,QAAQ;AACjB;AAAC,IAAA3B,EAAA,EAAAyB,GAAA;AAAAM,YAAA,CAAA/B,EAAA;AAAA+B,YAAA,CAAAN,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}