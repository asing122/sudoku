{"ast":null,"code":"export function CreateBoard() {\n  let board = [];\n  for (let i = 0; i < 9; i++) {\n    board = [...board, CreateBox(board, i)];\n  }\n  return board;\n}\n_c = CreateBoard;\nfunction CreateBox(board, row) {\n  let nums = Array.from(Array(9).keys()).map(num => num + 1);\n  let conflict = true;\n  let newRow = [];\n  while (conflict) {\n    for (let i = 0; i < 9; i++) {\n      let newItemNum = nums.pop() || 9;\n      let colNumber = nums.pop() || 9;\n      let rowNumber = row;\n      let x = rowNumber * 9 + colNumber;\n      let boxNumber = (x - x % 3) / 3 % 9;\n      newRow.push({\n        num: newItemNum,\n        row: rowNumber,\n        col: colNumber,\n        box: boxNumber\n      });\n    }\n    conflict = false;\n    for (let i = 0; i < 9; i++) {\n      if (board.filter(item => item.col == newRow[i].col && item.num == newRow[i].num).length > 0 || board.filter(item => item.box == newRow[i].box && item.num == newRow[i].num).length > 0) {\n        conflict = true;\n      }\n    }\n  }\n  return newRow;\n}\n\n// From GeeksforGeeks\n_c2 = CreateBox;\nfunction shuffleArray(array) {\n  for (var i = array.length - 1; i > 0; i--) {\n    var j = Math.floor(Math.random() * (i + 1));\n    var temp = array[i];\n    array[i] = array[j];\n    array[j] = temp;\n  }\n  return array;\n}\nvar _c, _c2;\n$RefreshReg$(_c, \"CreateBoard\");\n$RefreshReg$(_c2, \"CreateBox\");","map":{"version":3,"names":["CreateBoard","board","i","CreateBox","_c","row","nums","Array","from","keys","map","num","conflict","newRow","newItemNum","pop","colNumber","rowNumber","x","boxNumber","push","col","box","filter","item","length","_c2","shuffleArray","array","j","Math","floor","random","temp","$RefreshReg$"],"sources":["/Users/annikasingh/Desktop/hi/sudoku/src/components/CreateBoard.tsx"],"sourcesContent":["import { Board } from \"./TestBoard\";\n\nexport function CreateBoard(): Board[] {\n  let board: Board[] = [];\n  for (let i = 0; i < 9; i++) {\n    board = [...board, CreateBox(board, i)] as Board[];\n  }\n  return board;\n}\n\nfunction CreateBox(board: Board[], row: number): Board[] {\n  let nums = Array.from(Array(9).keys()).map((num) => num + 1);\n  let conflict = true;\n  let newRow: Board[] = [];\n  while (conflict) {\n    for (let i = 0; i < 9; i++) {\n      let newItemNum = nums.pop() || 9;\n      let colNumber = nums.pop() || 9;\n      let rowNumber = row;\n      let x = rowNumber * 9 + colNumber;\n      let boxNumber = ((x - (x % 3)) / 3) % 9;\n      newRow.push({\n        num: newItemNum,\n        row: rowNumber,\n        col: colNumber,\n        box: boxNumber,\n      });\n    }\n    conflict = false;\n    for (let i = 0; i < 9; i++) {\n      if (\n        board.filter(\n          (item) => item.col == newRow[i].col && item.num == newRow[i].num\n        ).length > 0 ||\n        board.filter(\n          (item) => item.box == newRow[i].box && item.num == newRow[i].num\n        ).length > 0\n      ) {\n        conflict = true;\n      }\n    }\n  }\n  return newRow;\n}\n\n// From GeeksforGeeks\nfunction shuffleArray(array: Board[]): Board[] {\n  for (var i = array.length - 1; i > 0; i--) {\n    var j = Math.floor(Math.random() * (i + 1));\n\n    var temp = array[i];\n    array[i] = array[j];\n    array[j] = temp;\n  }\n\n  return array;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}