{"ast":null,"code":"var _jsxFileName = \"/Users/annikasingh/Desktop/hi/sudoku-git/sudoku/src/components/display/BoardDisplay.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { colors } from \"./SudokuBoard\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function BoardDisplay({\n  initial\n}) {\n  _s();\n  const [done, setDone] = useState(false);\n  function boardFilled() {\n    let completedBoard = initial.filter(box => box.filter(item => item.num == 0).length > 0).length == 0;\n    let flattenBoard = [];\n    initial.map(box => box.map(item => flattenBoard.push(item)));\n    if (completedBoard) {\n      let allNumbers = Array.from(Array(9).keys()).map(item => item + 1).sort();\n      let conflict = false;\n      Array.from(Array(9).keys()).map(val => {\n        let rowConflict = flattenBoard.filter(item => item.row == val).map(item => item.num).sort().toString() !== allNumbers.toString();\n        let colConflict = flattenBoard.filter(item => item.col == val).map(item => item.num).sort().toString() !== allNumbers.toString();\n        let boxConflict = flattenBoard.filter(item => item.box == val).map(item => item.num).sort().toString() !== allNumbers.toString();\n        if (rowConflict || colConflict || boxConflict) {\n          conflict = true;\n        }\n      });\n      if (!conflict) {\n        console.log(\"yay\");\n      }\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [done, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board\",\n      children: initial.map((box, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid-box\",\n        id: index.toString(),\n        children: box.map((cell, cellIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cell-item\",\n          id: cellIndex.toString(),\n          style: {\n            backgroundColor: colors[index]\n          },\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            defaultValue: cell.num != 0 ? cell.num : \"\",\n            onChange: e => {\n              let numberValue = Number.parseInt(e.target.value);\n              if (numberValue <= 9 && numberValue >= 1 && e.target.value.match(/^\\d+$/) != null) {\n                initial[index][cellIndex].num = Number.parseInt(e.target.value);\n              } else if ((numberValue >= 9 || e.target.value.match(/^\\d+$/) == null) && e.target.value.match(/\\b/) != null && cell.num != 0) {\n                e.target.value = cell.num.toString();\n              } else {\n                e.target.value = \"\";\n              }\n              boardFilled();\n            },\n            className: \"input-cell\",\n            readOnly: initial[index][cellIndex].num != 0,\n            style: initial[index][cellIndex].num != 0 ? {\n              cursor: \"default\"\n            } : {}\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(BoardDisplay, \"0mz8s7cWzSmcGyoUdgXTliy2Hjc=\");\n_c = BoardDisplay;\nvar _c;\n$RefreshReg$(_c, \"BoardDisplay\");","map":{"version":3,"names":["useState","colors","jsxDEV","_jsxDEV","Fragment","_Fragment","BoardDisplay","initial","_s","done","setDone","boardFilled","completedBoard","filter","box","item","num","length","flattenBoard","map","push","allNumbers","Array","from","keys","sort","conflict","val","rowConflict","row","toString","colConflict","col","boxConflict","console","log","children","className","index","id","cell","cellIndex","style","backgroundColor","defaultValue","onChange","e","numberValue","Number","parseInt","target","value","match","readOnly","cursor","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/annikasingh/Desktop/hi/sudoku-git/sudoku/src/components/display/BoardDisplay.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { colors } from \"./SudokuBoard\";\nimport { Board } from \"./SudokuBoard\";\n\ntype BoardProps = {\n  initial: Board[][];\n};\nexport default function BoardDisplay({ initial }: BoardProps) {\n  const [done, setDone] = useState(false);\n  function boardFilled() {\n    let completedBoard =\n      initial.filter((box) => box.filter((item) => item.num == 0).length > 0)\n        .length == 0;\n\n    let flattenBoard: Board[] = [];\n    initial.map((box) => box.map((item) => flattenBoard.push(item)));\n    if (completedBoard) {\n      let allNumbers = Array.from(Array(9).keys())\n        .map((item) => item + 1)\n        .sort();\n      let conflict = false;\n      Array.from(Array(9).keys()).map((val) => {\n        let rowConflict =\n          flattenBoard\n            .filter((item) => item.row == val)\n            .map((item) => item.num)\n            .sort()\n            .toString() !== allNumbers.toString();\n        let colConflict =\n          flattenBoard\n            .filter((item) => item.col == val)\n            .map((item) => item.num)\n            .sort()\n            .toString() !== allNumbers.toString();\n        let boxConflict =\n          flattenBoard\n            .filter((item) => item.box == val)\n            .map((item) => item.num)\n            .sort()\n            .toString() !== allNumbers.toString();\n        if (rowConflict || colConflict || boxConflict) {\n          conflict = true;\n        }\n      });\n      if (!conflict) {\n        console.log(\"yay\");\n      }\n    }\n  }\n\n  return (\n    <>\n      {done}\n      <div className=\"board\">\n        {initial.map((box, index) => (\n          <div className=\"grid-box\" id={index.toString()}>\n            {box.map((cell, cellIndex) => (\n              <div\n                className=\"cell-item\"\n                id={cellIndex.toString()}\n                style={{ backgroundColor: colors[index] }}\n              >\n                <input\n                  defaultValue={cell.num != 0 ? cell.num : \"\"}\n                  onChange={(e) => {\n                    let numberValue = Number.parseInt(e.target.value);\n                    if (\n                      numberValue <= 9 &&\n                      numberValue >= 1 &&\n                      e.target.value.match(/^\\d+$/) != null\n                    ) {\n                      initial[index][cellIndex].num = Number.parseInt(\n                        e.target.value\n                      );\n                    } else if (\n                      (numberValue >= 9 ||\n                        e.target.value.match(/^\\d+$/) == null) &&\n                      e.target.value.match(/\\b/) != null &&\n                      cell.num != 0\n                    ) {\n                      e.target.value = cell.num.toString();\n                    } else {\n                      e.target.value = \"\";\n                    }\n                    boardFilled();\n                  }}\n                  className=\"input-cell\"\n                  readOnly={initial[index][cellIndex].num != 0}\n                  style={\n                    initial[index][cellIndex].num != 0\n                      ? { cursor: \"default\" }\n                      : {}\n                  }\n                />\n              </div>\n            ))}\n          </div>\n        ))}\n      </div>\n    </>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}