{"ast":null,"code":"var _jsxFileName = \"/Users/annikasingh/Desktop/hi/sudoku/src/components/Main.tsx\";\nimport \"../styles/main.css\";\nimport { Sudoku } from \"./Sudoku\";\nimport SudokuBoard from \"./SudokuBoard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Main() {\n  let sudoku = new Sudoku();\n  sudoku.fillValues();\n  console.log(sudoku.mat);\n  let board = [];\n  [0, 1, 2, 3, 4, 5, 6, 7, 8].map(value => {\n    let box = sudoku.mat.filter(item => item.box == value).map(x => x.num);\n    board.push(box);\n  });\n  let initial = [];\n  [0, 1, 2, 3, 4, 5, 6, 7, 8].map(value => {\n    let box = sudoku.mat.filter(item => item.box == value).map(x => x.num);\n    initial.push(box);\n  });\n  for (let x = 0; x < 9; x++) {\n    for (let y = 0; y < 9; y++) {\n      let number = Math.floor(Math.random() * 2);\n      if (number != 1) {\n        initial[x][y] = 0;\n      }\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(SudokuBoard, {\n    originalBoard: board,\n    initialBoard: initial\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 10\n  }, this);\n}\n_c = Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["Sudoku","SudokuBoard","jsxDEV","_jsxDEV","Main","sudoku","fillValues","console","log","mat","board","map","value","box","filter","item","x","num","push","initial","y","number","Math","floor","random","originalBoard","initialBoard","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/annikasingh/Desktop/hi/sudoku/src/components/Main.tsx"],"sourcesContent":["import \"../styles/main.css\";\nimport { Sudoku } from \"./Sudoku\";\nimport SudokuBoard from \"./SudokuBoard\";\n\nexport default function Main() {\n  let sudoku = new Sudoku();\n  sudoku.fillValues();\n  console.log(sudoku.mat);\n  let board: number[][] = [];\n  [0, 1, 2, 3, 4, 5, 6, 7, 8].map((value) => {\n    let box = sudoku.mat.filter((item) => item.box == value).map((x) => x.num);\n    board.push(box);\n  });\n\n  let initial: number[][] = [];\n  [0, 1, 2, 3, 4, 5, 6, 7, 8].map((value) => {\n    let box = sudoku.mat.filter((item) => item.box == value).map((x) => x.num);\n    initial.push(box);\n  });\n  for (let x = 0; x < 9; x++) {\n    for (let y = 0; y < 9; y++) {\n      let number = Math.floor(Math.random() * 2);\n      if (number != 1) {\n        initial[x][y] = 0;\n      }\n    }\n  }\n  return <SudokuBoard originalBoard={board} initialBoard={initial} />;\n}\n"],"mappings":";AAAA,OAAO,oBAAoB;AAC3B,SAASA,MAAM,QAAQ,UAAU;AACjC,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,eAAe,SAASC,IAAIA,CAAA,EAAG;EAC7B,IAAIC,MAAM,GAAG,IAAIL,MAAM,CAAC,CAAC;EACzBK,MAAM,CAACC,UAAU,CAAC,CAAC;EACnBC,OAAO,CAACC,GAAG,CAACH,MAAM,CAACI,GAAG,CAAC;EACvB,IAAIC,KAAiB,GAAG,EAAE;EAC1B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAACC,GAAG,CAAEC,KAAK,IAAK;IACzC,IAAIC,GAAG,GAAGR,MAAM,CAACI,GAAG,CAACK,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACF,GAAG,IAAID,KAAK,CAAC,CAACD,GAAG,CAAEK,CAAC,IAAKA,CAAC,CAACC,GAAG,CAAC;IAC1EP,KAAK,CAACQ,IAAI,CAACL,GAAG,CAAC;EACjB,CAAC,CAAC;EAEF,IAAIM,OAAmB,GAAG,EAAE;EAC5B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAACR,GAAG,CAAEC,KAAK,IAAK;IACzC,IAAIC,GAAG,GAAGR,MAAM,CAACI,GAAG,CAACK,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACF,GAAG,IAAID,KAAK,CAAC,CAACD,GAAG,CAAEK,CAAC,IAAKA,CAAC,CAACC,GAAG,CAAC;IAC1EE,OAAO,CAACD,IAAI,CAACL,GAAG,CAAC;EACnB,CAAC,CAAC;EACF,KAAK,IAAIG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;IAC1B,KAAK,IAAII,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;MAC1B,IAAIC,MAAM,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC;MAC1C,IAAIH,MAAM,IAAI,CAAC,EAAE;QACfF,OAAO,CAACH,CAAC,CAAC,CAACI,CAAC,CAAC,GAAG,CAAC;MACnB;IACF;EACF;EACA,oBAAOjB,OAAA,CAACF,WAAW;IAACwB,aAAa,EAAEf,KAAM;IAACgB,YAAY,EAAEP;EAAQ;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACrE;AAACC,EAAA,GAxBuB3B,IAAI;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}