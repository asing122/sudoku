{"ast":null,"code":"var _jsxFileName = \"/Users/annikasingh/Desktop/hi/sudoku/src/components/Board.tsx\";\nimport \"../styles/board.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Board() {\n  let board = [];\n  for (let i = 0; i < 9; i++) {\n    let box = [];\n    for (let j = 0; j < 9; j++) {\n      let defaultValue = Math.round(Math.random() * 8);\n      if (defaultValue == 1) {\n        let violatingRules = true;\n        let defaultNumber = Math.random() * 8 + 1;\n        while (violatingRules) {}\n      }\n    }\n    board.push(box);\n  }\n  console.log(board);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board\",\n    children: board.map((box, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid-box\",\n        id: index.toString(),\n        children: box.map((cell, cellIndex) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cell-item\",\n            id: cellIndex.toString(),\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              defaultValue: cell != 0 ? cell : \"\",\n              onChange: e => {\n                let numberValue = Number.parseInt(e.target.value);\n                if (numberValue && numberValue <= 9 && numberValue >= 1) {\n                  board[index][cellIndex] = Number.parseInt(e.target.value);\n                } else {\n                  e.target.value = \"\";\n                }\n              },\n              className: \"input-cell\",\n              contentEditable: cell != 0 ? false : true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_c = Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["jsxDEV","_jsxDEV","Board","board","i","box","j","defaultValue","Math","round","random","violatingRules","defaultNumber","push","console","log","className","children","map","index","id","toString","cell","cellIndex","onChange","e","numberValue","Number","parseInt","target","value","contentEditable","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/annikasingh/Desktop/hi/sudoku/src/components/Board.tsx"],"sourcesContent":["import { isContentEditable } from \"@testing-library/user-event/dist/utils\";\nimport \"../styles/board.css\";\n\nexport default function Board() {\n  let board: number[][] = [];\n  for (let i = 0; i < 9; i++) {\n    let box: number[] = [];\n    for (let j = 0; j < 9; j++) {\n      let defaultValue = Math.round(Math.random() * 8);\n      if (defaultValue == 1) {\n        let violatingRules = true;\n        let defaultNumber = Math.random() * 8 + 1;\n        while (violatingRules) {}\n      }\n    }\n    board.push(box);\n  }\n  console.log(board);\n  return (\n    <div className=\"board\">\n      {board.map((box, index) => {\n        return (\n          <div className=\"grid-box\" id={index.toString()}>\n            {box.map((cell, cellIndex) => {\n              return (\n                <div className=\"cell-item\" id={cellIndex.toString()}>\n                  <input\n                    defaultValue={cell != 0 ? cell : \"\"}\n                    onChange={(e) => {\n                      let numberValue = Number.parseInt(e.target.value);\n                      if (numberValue && numberValue <= 9 && numberValue >= 1) {\n                        board[index][cellIndex] = Number.parseInt(\n                          e.target.value\n                        );\n                      } else {\n                        e.target.value = \"\";\n                      }\n                    }}\n                    className=\"input-cell\"\n                    contentEditable={cell != 0 ? false : true}\n                  />\n                </div>\n              );\n            })}\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n"],"mappings":";AACA,OAAO,qBAAqB;AAAC,SAAAA,MAAA,IAAAC,OAAA;AAE7B,eAAe,SAASC,KAAKA,CAAA,EAAG;EAC9B,IAAIC,KAAiB,GAAG,EAAE;EAC1B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;IAC1B,IAAIC,GAAa,GAAG,EAAE;IACtB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;MAC1B,IAAIC,YAAY,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC;MAChD,IAAIH,YAAY,IAAI,CAAC,EAAE;QACrB,IAAII,cAAc,GAAG,IAAI;QACzB,IAAIC,aAAa,GAAGJ,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC;QACzC,OAAOC,cAAc,EAAE,CAAC;MAC1B;IACF;IACAR,KAAK,CAACU,IAAI,CAACR,GAAG,CAAC;EACjB;EACAS,OAAO,CAACC,GAAG,CAACZ,KAAK,CAAC;EAClB,oBACEF,OAAA;IAAKe,SAAS,EAAC,OAAO;IAAAC,QAAA,EACnBd,KAAK,CAACe,GAAG,CAAC,CAACb,GAAG,EAAEc,KAAK,KAAK;MACzB,oBACElB,OAAA;QAAKe,SAAS,EAAC,UAAU;QAACI,EAAE,EAAED,KAAK,CAACE,QAAQ,CAAC,CAAE;QAAAJ,QAAA,EAC5CZ,GAAG,CAACa,GAAG,CAAC,CAACI,IAAI,EAAEC,SAAS,KAAK;UAC5B,oBACEtB,OAAA;YAAKe,SAAS,EAAC,WAAW;YAACI,EAAE,EAAEG,SAAS,CAACF,QAAQ,CAAC,CAAE;YAAAJ,QAAA,eAClDhB,OAAA;cACEM,YAAY,EAAEe,IAAI,IAAI,CAAC,GAAGA,IAAI,GAAG,EAAG;cACpCE,QAAQ,EAAGC,CAAC,IAAK;gBACf,IAAIC,WAAW,GAAGC,MAAM,CAACC,QAAQ,CAACH,CAAC,CAACI,MAAM,CAACC,KAAK,CAAC;gBACjD,IAAIJ,WAAW,IAAIA,WAAW,IAAI,CAAC,IAAIA,WAAW,IAAI,CAAC,EAAE;kBACvDvB,KAAK,CAACgB,KAAK,CAAC,CAACI,SAAS,CAAC,GAAGI,MAAM,CAACC,QAAQ,CACvCH,CAAC,CAACI,MAAM,CAACC,KACX,CAAC;gBACH,CAAC,MAAM;kBACLL,CAAC,CAACI,MAAM,CAACC,KAAK,GAAG,EAAE;gBACrB;cACF,CAAE;cACFd,SAAS,EAAC,YAAY;cACtBe,eAAe,EAAET,IAAI,IAAI,CAAC,GAAG,KAAK,GAAG;YAAK;cAAAU,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC3C;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC;QAEV,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAEV,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACC,EAAA,GA9CuBlC,KAAK;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}